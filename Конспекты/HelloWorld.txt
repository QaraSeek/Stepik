В java любой испольняемый код должен принадлежать какому-то классу
public - ограничений на доступ к классу не устанавливается
Если название public, то название класса должно совпадать с названием файла, иначе он не скомпилируется
В одном java файле содержится один класс

Можно вкладывать другие классы внутрь одного файла, если:
1. Они являются вложенным классом
2. Они не имеют модификатора public
* Но злоупотреблять этим не надо

метод main - точка входа в программу
метод принимает на вход массив строк
void - говорит о том, что метод не возвращает ничего
модификатор public говорит о том, что доступ разрешён отовсюду
static - говорит о том, что метод можно вызывать не создавая экземпляра класса

System.exit(-1) - возвращает системе код ошибки и незамедлительно завершает программу
Также можно вместо метода void указать int, чтобы при завершении программы системе был передан код ошибки 0

Компиляция класса происходит с помощью команды javac HelloWorld.java
После этого компилируется файл HelloWorld.class
При этом, если в программе более 1 класса, то на каждый класс генерируется свой файл в байт коде
Посмотреть байт код в человеческом формате можно с помощью
javap -v HelloWorld.class
Запуск java программы выполняется с помощью указания названия класса
java HelloWorld
При этом если класс лежит в другой директории, то нужно задать её путь
java -classpath <classes_dir> HelloWorld

Распихивать все классы по каким-то папкам - неок затея
Для этого были придуманы .jar файлы, которые являются аналогом .zip .tar.gz etc
Запихнуть класс в архив можно так:
jar cfe <archvie_name>.jar <className.class> <className>.class
Создаётся архив в котором также будет содержаться мета инфа о классах
Посмотреть содержимое архива можно:
jar tf <archive_name>.jar
Распаковать .jar
jar xf <archive_name>.jar
Если в jare прописан главный класс, то запуск идёт следующим образом:
java -jar <archive_name>.jar
Если главный класс не прописан, но известен:
java -classpath <archive_name>.jar <className>
